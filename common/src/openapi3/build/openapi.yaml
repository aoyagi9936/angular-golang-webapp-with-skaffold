openapi: 3.0.0
info:
  version: 1.0.0
  title: Webapp Example
  license:
    name: MIT
servers:
  - url: 'http://webapp-example.test/api/v1'
paths:
  /items:
    get:
      summary: List all items
      operationId: listItems
      tags:
        - items
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of items
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Items'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a item
      operationId: createItems
      tags:
        - items
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/items/{itemId}':
    get:
      summary: Info for a specific item
      operationId: showItemById
      tags:
        - items
      parameters:
        - name: itemId
          in: path
          required: true
          description: The id of the item to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Item:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Items:
      type: array
      items:
        $ref: '#/components/schemas/Item'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
